{"ast":null,"code":"var _jsxFileName = \"/Users/othmanadi/Downloads/ArchiveToArtem-main/src/components/Jobs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Job from \"./Job\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Jobs = ({\n  data,\n  setKeywords,\n  keywords\n}) => {\n  _s();\n\n  console.log(data);\n  const [filteredData, setfilteredData] = useState([]); // const SearchFunc = () => {\n  //   if (keywords.length > 0) {\n  //     const newData = filteredData.filter((d) => {\n  //       return d.position.toLocaleLowerCase().includes(keywords);\n  //     });\n  //     setfilteredData(newData);\n  //   } else {\n  //     setfilteredData(data);\n  //   }\n  // };\n\n  const modifiedData = () => {\n    if (keywords) {\n      const newData = data.filter(d => {\n        return keywords.every(key => {\n          return d.role === key || d.level === key || d.languages.includes(key) || d.tools.includes(key);\n        });\n      });\n      setfilteredData(newData);\n    } else {\n      setfilteredData(data);\n    }\n  };\n\n  useEffect(() => {\n    modifiedData(); // SearchFunc();\n  }, [keywords]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobs\",\n    children: filteredData.map(d => {\n      return /*#__PURE__*/_jsxDEV(Job, {\n        data: d,\n        setkeywords: setKeywords\n      }, d.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Jobs, \"jtkzpgCQV4BviQgmEdjrD6ENfjU=\");\n\n_c = Jobs;\nexport default Jobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"sources":["/Users/othmanadi/Downloads/ArchiveToArtem-main/src/components/Jobs.js"],"names":["React","useEffect","useState","Job","Jobs","data","setKeywords","keywords","console","log","filteredData","setfilteredData","modifiedData","newData","filter","d","every","key","role","level","languages","includes","tools","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA;AAArB,CAAD,KAAqC;AAAA;;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD,CAFgD,CAIhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACvB,QAAIL,QAAJ,EAAc;AACd,YAAMM,OAAO,GAAGR,IAAI,CAACS,MAAL,CAAaC,CAAD,IAAO;AACjC,eAAOR,QAAQ,CAACS,KAAT,CAAgBC,GAAD,IAAS;AAC7B,iBACEF,CAAC,CAACG,IAAF,KAAWD,GAAX,IACAF,CAAC,CAACI,KAAF,KAAYF,GADZ,IAEAF,CAAC,CAACK,SAAF,CAAYC,QAAZ,CAAqBJ,GAArB,CAFA,IAGAF,CAAC,CAACO,KAAF,CAAQD,QAAR,CAAiBJ,GAAjB,CAJF;AAMD,SAPM,CAAP;AAQD,OATe,CAAhB;AAUAN,MAAAA,eAAe,CAACE,OAAD,CAAf;AACD,KAZC,MAYK;AACLF,MAAAA,eAAe,CAACN,IAAD,CAAf;AACD;AACF,GAhBD;;AAkBAJ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,GADE,CAEd;AACD,GAHQ,EAGN,CAACL,QAAD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACGG,YAAY,CAACa,GAAb,CAAkBR,CAAD,IAAO;AACvB,0BAAO,QAAC,GAAD;AAAgB,QAAA,IAAI,EAAEA,CAAtB;AAAyB,QAAA,WAAW,EAAET;AAAtC,SAAUS,CAAC,CAACS,EAAZ;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7CD;;GAAMpB,I;;KAAAA,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Job from \"./Job\";\n\nconst Jobs = ({ data, setKeywords, keywords }) => {\n  console.log(data);\n  const [filteredData, setfilteredData] = useState([]);\n\n  // const SearchFunc = () => {\n  //   if (keywords.length > 0) {\n  //     const newData = filteredData.filter((d) => {\n  //       return d.position.toLocaleLowerCase().includes(keywords);\n  //     });\n  //     setfilteredData(newData);\n  //   } else {\n  //     setfilteredData(data);\n  //   }\n  // };\n\n  const modifiedData = () => {\n      if (keywords) {\n      const newData = data.filter((d) => {\n        return keywords.every((key) => {\n          return (\n            d.role === key ||\n            d.level === key ||\n            d.languages.includes(key) ||\n            d.tools.includes(key)\n          );\n        });\n      });\n      setfilteredData(newData);\n    } else {\n      setfilteredData(data);\n    }\n  };\n\n  useEffect(() => {\n    modifiedData();\n    // SearchFunc();\n  }, [keywords]);\n\n  return (\n    <div className=\"jobs\">\n      {filteredData.map((d) => {\n        return <Job key={d.id} data={d} setkeywords={setKeywords} />;\n      })}\n    </div>\n  );\n};\n\nexport default Jobs;\n"]},"metadata":{},"sourceType":"module"}